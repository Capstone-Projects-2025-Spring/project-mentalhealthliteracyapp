"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[397],{30429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var s=n(74848),i=n(28453);const r={sidebar_position:1},o="Backend Unit Tests",l={id:"testing/backend-unit-testing",title:"Backend Unit Tests",description:"Unit Testing Library Explanation",source:"@site/docs/testing/backend-unit-testing.md",sourceDirName:"testing",slug:"/testing/backend-unit-testing",permalink:"/project-mentalhealthliteracyapp/docs/testing/backend-unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-mentalhealthliteracyapp/edit/main/documentation/docs/testing/backend-unit-testing.md",tags:[],version:"current",lastUpdatedBy:"GustavoBenitez1",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-mentalhealthliteracyapp/docs/category/test-procedures"},next:{title:"Frontend Unit Tests",permalink:"/project-mentalhealthliteracyapp/docs/testing/frontend-unit-testing"}},c={},a=[{value:"Unit Testing Library Explanation",id:"unit-testing-library-explanation",level:2},{value:"Example Unit Tests",id:"example-unit-tests",level:2},{value:"User Authentication",id:"user-authentication",level:3},{value:"Video Metadata Retrieval",id:"video-metadata-retrieval",level:3},{value:"Resource Lookup",id:"resource-lookup",level:3},{value:"Test Case Examples",id:"test-case-examples",level:4},{value:"Test Coverage Report",id:"test-coverage-report",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"backend-unit-tests",children:"Backend Unit Tests"}),"\n",(0,s.jsx)(t.h2,{id:"unit-testing-library-explanation",children:"Unit Testing Library Explanation"}),"\n",(0,s.jsxs)(t.p,{children:["For backend unit testing, we use ",(0,s.jsx)(t.strong,{children:"Vitest"})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Vitest"})," is chosen for its speed, modern tooling, and seamless integration with Vite based projects. It supports Jest compatible syntax, making it easy to adopt and maintain. It also provides built-in coverage reporting and works well for our server logic."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Jest"})," is a mature, widely-used alternative with robust mocking and coverage features, suitable for projects not using Vite."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"These libraries are suitable for our project because they allow us to test backend logic efficiently, with strong support for mocking external dependencies"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Focus:"})," Test standalone backend logic functions (API handlers, data transformers, Supabase queries) to ensure correct outputs for given inputs."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Tools:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Vitest"}),": For testing server logic, API routes, and edge functions"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Mocking:"})," Use ",(0,s.jsx)(t.code,{children:"vi.mock()"})," or ",(0,s.jsx)(t.code,{children:"jest.mock()"})," to stub Supabase client and mock database results"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"For each method, one or more test cases."}),"\n",(0,s.jsx)(t.p,{children:"A test case consists of input parameter values and expected results."}),"\n",(0,s.jsx)(t.p,{children:"All external classes should be stubbed using mock objects."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"example-unit-tests",children:"Example Unit Tests"}),"\n",(0,s.jsx)(t.h3,{id:"user-authentication",children:"User Authentication"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test:"})," Valid login credentials","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input:"})," username = 'user1', password = 'correctpassword'"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Expected Result:"})," Authentication succeeds, user token returned"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test:"})," Invalid login credentials","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input:"})," username = 'user1', password = 'wrongpassword'"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Expected Result:"})," Authentication fails, error message returned"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"video-metadata-retrieval",children:"Video Metadata Retrieval"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test:"})," Fetch metadata for existing video","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input:"})," video_id = 'abc123'"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Expected Result:"})," Metadata object with title, description, and URL is returned"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test:"})," Fetch metadata for non-existent video","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input:"})," video_id = 'notfound'"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Expected Result:"})," Error or null result"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"resource-lookup",children:"Resource Lookup"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test:"})," Lookup resource by valid topic","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input:"})," topic = 'anxiety'"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Expected Result:"})," List of resource objects related to 'anxiety'"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test:"})," Lookup resource by invalid topic","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input:"})," topic = 'unknown-topic'"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Expected Result:"})," Empty list or not found response"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h4,{id:"test-case-examples",children:"Test Case Examples"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"getUserVideos(userId)"})," should return a list of video metadata"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"validateUploadFile(file)"})," should return false if type is unsupported"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"test-coverage-report",children:"Test Coverage Report"}),"\n",(0,s.jsxs)(t.p,{children:["Vitest (or Jest) can generate an HTML coverage report. To make this available in Docusaurus, export the report and place it in the ",(0,s.jsx)(t.code,{children:"static"})," folder. For automation, set up a CI pipeline to run tests, generate the report, and move it to ",(0,s.jsx)(t.code,{children:"static"})," on each update."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);