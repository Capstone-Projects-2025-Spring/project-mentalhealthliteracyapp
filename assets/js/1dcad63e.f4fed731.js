"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2994],{95156:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>c,contentTitle:()=>p,default:()=>S,frontMatter:()=>r,metadata:()=>i,toc:()=>o});var n=s(74848),t=s(28453);const r={},p="Sequence Diagrams",i={id:"system-architecture/sequence-diagrams",title:"Sequence Diagrams",description:"This section provides sequence diagrams that illustrate the flow of interactions between different components and services in the mental health literacy application.",source:"@site/docs/system-architecture/sequence-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence-diagrams",permalink:"/project-mentalhealthliteracyapp/docs/system-architecture/sequence-diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-mentalhealthliteracyapp/edit/main/documentation/docs/system-architecture/sequence-diagrams.md",tags:[],version:"current",lastUpdatedBy:"GustavoBenitez1",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Component Descriptions",permalink:"/project-mentalhealthliteracyapp/docs/system-architecture/component-descriptions"},next:{title:"API Specification",permalink:"/project-mentalhealthliteracyapp/docs/category/api-specification"}},c={},o=[{value:"Use Case 1 \u2013 Account Creation",id:"use-case-1--account-creation",level:2},{value:"Use Case 2 - Journal Saving",id:"use-case-2---journal-saving",level:2},{value:"Use Case 3 - Preferences",id:"use-case-3---preferences",level:2},{value:"Use Case 4 - Educational Resources",id:"use-case-4---educational-resources",level:2},{value:"Use Case 5 - Videos",id:"use-case-5---videos",level:2},{value:"Use Case 6 - Liking Videos",id:"use-case-6---liking-videos",level:2}];function u(e){const a={h1:"h1",h2:"h2",img:"img",mermaid:"mermaid",p:"p",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"sequence-diagrams",children:"Sequence Diagrams"}),"\n",(0,n.jsx)(a.p,{children:"This section provides sequence diagrams that illustrate the flow of interactions between different components and services in the mental health literacy application."}),"\n",(0,n.jsx)(a.h2,{id:"use-case-1--account-creation",children:"Use Case 1 \u2013 Account Creation"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"alt text",src:s(85180).A+"",width:"3467",height:"3840"})}),"\n",(0,n.jsx)(a.h2,{id:"use-case-2---journal-saving",children:"Use Case 2 - Journal Saving"}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    participant User\n    participant App\n    participant "Auth Service (Supabase)"\n    participant "PostgreSQL"\n    User->>App: Launch app on their personal computer\n    activate App\n    App--\x3e>User: Welcome screen<br>Sign Up / Log In\n    User->>App: Signs in by entering email,pwd\n    App->>"Auth Service (Supabase)": SELECT /user\n    activate "Auth Service (Supabase)"\n    "Auth Service (Supabase)"->>"PostgreSQL": Validate email and pwd\n    "PostgreSQL"--\x3e>"Auth Service (Supabase)": /user Exists\n    "Auth Service (Supabase)"->>App: 200 OK (user Exists)\n    App--\x3e>User: Show Home screen\n    User->> App: Tap "Journal"\n    User->> App: Write journal entry\n    App->> "PostgreSQL": Save journal entry\n    User->> App: Terminate Session\n    App->> User: Session Terminated\n    User->> App: Launch App on their phone\n    App--\x3e>User: Welcome screen<br>Sign Up / Log In\n    User->>App: Signs in by entering email,pwd\n    App->>"Auth Service (Supabase)": SELECT /user\n    activate "Auth Service (Supabase)"\n    "Auth Service (Supabase)"->>"PostgreSQL": Validate email and pwd\n    "PostgreSQL"--\x3e>"Auth Service (Supabase)": /user Exists\n    "Auth Service (Supabase)"->>App: 200 OK (user Exists)\n        App--\x3e>User: Show Home screen\n    User->> App: Tap "Journal"\n    App->> User: Show previous journal entries'}),"\n",(0,n.jsx)(a.h2,{id:"use-case-3---preferences",children:"Use Case 3 - Preferences"}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    participant User\n    participant App\n    participant "Auth Service (Supabase)"\n    participant "PostgreSQL"\n    User->>App: Launch app\n    activate App\n    App--\x3e>User: Welcome screen<br>Sign Up / Log In\n    User->>App: Tap "Log In"\n    App--\x3e>User: Show Log in form\n    User->>App: Enter email, pwd -> "Log In"\n    App->>"Auth Service (Supabase)": SELECT /user\n    activate "Auth Service (Supabase)"\n    "Auth Service (Supabase)"->>"PostgreSQL": Validate email and pwd\n    "PostgreSQL"--\x3e>"Auth Service (Supabase)": /user Exists\n    "Auth Service (Supabase)"->>App: 200 OK (user Exists)\n    App--\x3e>User: Show Home screen\n    User->>App: Tap "Settings"\n    App--\x3e>User: Show Settings form\n    User->>App: Select notification frequency -> "Save"\n    App->>"PostgreSQL": POST /user/frequency\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Update OK\n    deactivate "PostgreSQL"\n    deactivate "Auth Service (Supabase)"\n    App->>User: Screen displays updated preference\n    deactivate App'}),"\n",(0,n.jsx)(a.h2,{id:"use-case-4---educational-resources",children:"Use Case 4 - Educational Resources"}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    participant User\n    participant App\n    participant "Auth Service (Supabase)"\n    participant "PostgreSQL"\n    User->>App: Launch app\n    activate App\n    App--\x3e>User: Welcome screen<br>Sign Up / Log In \n    User->>App: Tap "Log In"\n    App--\x3e>User: Show Log in form \n    User->>App: Enter email, pwd -> "Log In"\n    App->>"Auth Service (Supabase)": SELECT /user\n    activate "Auth Service (Supabase)"\n    "Auth Service (Supabase)"->>"PostgreSQL": Validate email and pwd\n    "PostgreSQL"--\x3e>"Auth Service (Supabase)": /user Exists\n    "Auth Service (Supabase)"->>App: 200 OK (user Exists)\n    App--\x3e>User: Show Home screen\n    User->>App: Tap "Resources"\n    App->>"PostgreSQL": GET /resources\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Return modules and videos\n    deactivate "PostgreSQL"\n    deactivate "Auth Service (Supabase)"\n    App->>User: Display educational videos and modules\n    deactivate App'}),"\n",(0,n.jsx)(a.h2,{id:"use-case-5---videos",children:"Use Case 5 - Videos"}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    participant User\n    participant App\n    participant "Auth Service (Supabase)"\n    participant "PostgreSQL"\n    User->>App: Launch app\n    activate App\n    App--\x3e>User: Welcome screen<br>Sign Up / Log In \n    User->>App: Tap "Log In"\n    App--\x3e>User: Show Log in form \n    User->>App: Enter email, pwd -> "Log In"\n    App->>"Auth Service (Supabase)": SELECT /user\n    activate "Auth Service (Supabase)"\n    "Auth Service (Supabase)"->>"PostgreSQL": Validate email and pwd\n    "PostgreSQL"--\x3e>"Auth Service (Supabase)": /user Exists\n    "Auth Service (Supabase)"->>App: 200 OK (user Exists)\n    App--\x3e>User: Show Home screen\n    User->>App: Tap "Videos"\n    App->>"PostgreSQL": GET /video1\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Return first video\n    deactivate "PostgreSQL"\n    App--\x3e>User: Display first video\n    User->>App: Swipe to next video\n    App->>"PostgreSQL": GET /video2\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Return second video\n    deactivate "PostgreSQL"\n    App--\x3e>User: Display second video\n    deactivate "Auth Service (Supabase)"\n    deactivate App'}),"\n",(0,n.jsx)(a.h2,{id:"use-case-6---liking-videos",children:"Use Case 6 - Liking Videos"}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    participant User\n    participant App\n    participant "Auth Service (Supabase)"\n    participant "PostgreSQL"\n    User->>App: Launch app\n    activate App\n    App--\x3e>User: Welcome screen<br>Sign Up / Log In\n    User->>App: Tap "Log In"\n    App--\x3e>User: Show Log in form\n    User->>App: Enter email, pwd -> "Log In"\n    App->>"Auth Service (Supabase)": SELECT /user\n    activate "Auth Service (Supabase)"\n    "Auth Service (Supabase)"->>"PostgreSQL": Validate email and pwd\n    "PostgreSQL"--\x3e>"Auth Service (Supabase)": /user Exists\n    "Auth Service (Supabase)"->>App: 200 OK (user Exists)\n    App--\x3e>User: Show Home screen\n    User->>App: Tap "Videos"\n    App->>"PostgreSQL": GET /videos\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Return video list\n    deactivate "PostgreSQL"\n    App--\x3e>User: Display videos\n    User->>App: Tap "Like" on a video\n    App->>"PostgreSQL": POST /user/like (videoID)\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Like saved\n    deactivate "PostgreSQL"\n    App--\x3e>User: Show heart animation/confirmation\n    User->>App: Tap "Liked Videos"\n    App->>"PostgreSQL": GET /user/liked-videos\n    activate "PostgreSQL"\n    "PostgreSQL"--\x3e>App: Return liked videos\n    deactivate "PostgreSQL"\n    App--\x3e>User: Display liked videos\n    deactivate "Auth Service (Supabase)"\n    deactivate App'})]})}function S(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},85180:(e,a,s)=>{s.d(a,{A:()=>n});const n=s.p+"assets/images/account-creation-sequence-ca3eef371e451db10ad030fc63ad271a.png"},28453:(e,a,s)=>{s.d(a,{R:()=>p,x:()=>i});var n=s(96540);const t={},r=n.createContext(t);function p(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:p(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);