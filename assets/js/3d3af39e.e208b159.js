"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2717],{8616:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var t=s(74848),i=s(28453);const r={sidebar_position:3},o="Component Unit Tests",l={id:"testing/component-unit-testing",title:"Component Unit Tests",description:"Testing Framework and Approach",source:"@site/docs/testing/component-unit-testing.md",sourceDirName:"testing",slug:"/testing/component-unit-testing",permalink:"/project-mentalhealthliteracyapp/docs/testing/component-unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-mentalhealthliteracyapp/edit/main/documentation/docs/testing/component-unit-testing.md",tags:[],version:"current",lastUpdatedBy:"GustavoBenitez1",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Acceptance Tests",permalink:"/project-mentalhealthliteracyapp/docs/testing/acceptance-testing"}},c={},a=[{value:"Testing Framework and Approach",id:"testing-framework-and-approach",level:2},{value:"Component Overview",id:"component-overview",level:2},{value:"<code>BackButton</code>",id:"backbutton",level:3},{value:"<code>CloseButton</code>",id:"closebutton",level:3},{value:"<code>LikedVideoCard</code>",id:"likedvideocard",level:3},{value:"Test Coverage and Scenarios",id:"test-coverage-and-scenarios",level:2},{value:"BackButton Component",id:"backbutton-component",level:3},{value:"Test Scenarios",id:"test-scenarios",level:4},{value:"CloseButton Component",id:"closebutton-component",level:3},{value:"Test Scenarios",id:"test-scenarios-1",level:4},{value:"LikedVideoCard Component",id:"likedvideocard-component",level:3},{value:"Test Scenarios",id:"test-scenarios-2",level:4},{value:"Test Implementation Details",id:"test-implementation-details",level:2},{value:"Mocking Strategy",id:"mocking-strategy",level:3},{value:"Test Structure",id:"test-structure",level:3},{value:"Error Handling Tests",id:"error-handling-tests",level:3},{value:"Current Test Status",id:"current-test-status",level:2},{value:"Test Results",id:"test-results",level:3},{value:"Coverage Areas",id:"coverage-areas",level:3},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"Best Practices and Standards",id:"best-practices-and-standards",level:2},{value:"Test Organization",id:"test-organization",level:3},{value:"Mocking Guidelines",id:"mocking-guidelines",level:3},{value:"Assertion Patterns",id:"assertion-patterns",level:3},{value:"Integration with Development Workflow",id:"integration-with-development-workflow",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"component-unit-tests",children:"Component Unit Tests"}),"\n",(0,t.jsx)(n.h2,{id:"testing-framework-and-approach",children:"Testing Framework and Approach"}),"\n",(0,t.jsxs)(n.p,{children:["Component unit testing utilizes ",(0,t.jsx)(n.strong,{children:"Vitest"})," and ",(0,t.jsx)(n.strong,{children:"React component testing"})," to ensure comprehensive coverage of UI components and their functionality."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vitest"})," provides fast, reliable testing with Jest-compatible syntax, making it ideal for testing React components and their logic. It supports comprehensive mocking and generates detailed coverage reports."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component testing"})," allows testing of React components in isolation, focusing on their logic, props handling, and user interactions without requiring a full browser environment."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These libraries are particularly suitable for component testing because they enable testing of UI logic, prop validation, and component behavior in isolation."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Primary Focus:"})," Test React components in isolation to ensure UI logic, prop handling, and user interactions work as expected across various scenarios."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Testing Tools:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vitest:"})," Fast test runner with comprehensive mocking capabilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component mocking:"})," Mock external dependencies and browser APIs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logic testing:"})," Test component logic without full rendering"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Each component includes multiple test cases covering different scenarios and edge cases."}),"\n",(0,t.jsx)(n.p,{children:"A test case consists of input props, mocked dependencies, and expected results."}),"\n",(0,t.jsx)(n.p,{children:"All external dependencies (routers, icons, video players) are stubbed using mock objects to ensure test isolation."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"component-overview",children:"Component Overview"}),"\n",(0,t.jsx)(n.h3,{id:"backbutton",children:(0,t.jsx)(n.code,{children:"BackButton"})}),"\n",(0,t.jsx)(n.p,{children:"Navigation component that handles browser back functionality with fallback to home navigation."}),"\n",(0,t.jsx)(n.h3,{id:"closebutton",children:(0,t.jsx)(n.code,{children:"CloseButton"})}),"\n",(0,t.jsx)(n.p,{children:"Simple button component that calls a close function when clicked, with proper event handling."}),"\n",(0,t.jsx)(n.h3,{id:"likedvideocard",children:(0,t.jsx)(n.code,{children:"LikedVideoCard"})}),"\n",(0,t.jsx)(n.p,{children:"Complex video card component that displays video information, thumbnails, and handles user interactions including likes and navigation."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"test-coverage-and-scenarios",children:"Test Coverage and Scenarios"}),"\n",(0,t.jsx)(n.h3,{id:"backbutton-component",children:"BackButton Component"}),"\n",(0,t.jsx)(n.h4,{id:"test-scenarios",children:"Test Scenarios"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Navigation function availability","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Component renders with navigation context"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Navigation function is defined and callable"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Navigation logic handling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Component with navigation logic and history"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Navigation function is a valid function that can be executed"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Navigation capability","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Component with navigation props and user interaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Navigation can be executed successfully"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"closebutton-component",children:"CloseButton Component"}),"\n",(0,t.jsx)(n.h4,{id:"test-scenarios-1",children:"Test Scenarios"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Close function calls","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," close prop function provided to component"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Function is defined and can be called on click"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Multiple click handling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Multiple click events on the close button"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Function handles multiple calls without errors"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Undefined prop handling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," close prop is undefined or null"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Component handles gracefully without crashing"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"likedvideocard-component",children:"LikedVideoCard Component"}),"\n",(0,t.jsx)(n.h4,{id:"test-scenarios-2",children:"Test Scenarios"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Video object structure validation","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Video object with all required properties"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," All required properties are present and displayed correctly"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Missing playbackId handling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Video without playbackId property"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Component handles undefined playbackId gracefully"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Tag display logic","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Video with multiple tags"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Shows first 2 tags and displays remaining count"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Description truncation","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Long description exceeding 60 characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"}),' Description truncated with "..." suffix']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test:"})," Edge case handling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," Various edge cases including no tags, empty tags, special characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Result:"})," Component handles all scenarios gracefully"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"test-implementation-details",children:"Test Implementation Details"}),"\n",(0,t.jsx)(n.h3,{id:"mocking-strategy",children:"Mocking Strategy"}),"\n",(0,t.jsx)(n.p,{children:"The component tests use a comprehensive mocking strategy to isolate components from external dependencies:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// React Router mocking\nconst mockNavigate = vi.fn();\nvi.mock('react-router-dom', async () => {\n  const actual = await vi.importActual('react-router-dom');\n  return {\n    ...actual,\n    useNavigate: () => mockNavigate,\n  };\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"test-structure",children:"Test Structure"}),"\n",(0,t.jsx)(n.p,{children:"Each test follows the AAA (Arrange, Act, Assert) pattern:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Arrange:"})," Set up component props and mock responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Act:"})," Render component and simulate user interactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Assert:"})," Verify the expected outcomes and component behavior"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"error-handling-tests",children:"Error Handling Tests"}),"\n",(0,t.jsx)(n.p,{children:"Error handling is thoroughly tested across all components:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Missing or invalid props"}),"\n",(0,t.jsx)(n.li,{children:"Undefined functions"}),"\n",(0,t.jsx)(n.li,{children:"Network errors"}),"\n",(0,t.jsx)(n.li,{children:"Component state changes"}),"\n",(0,t.jsx)(n.li,{children:"User interaction failures"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"current-test-status",children:"Current Test Status"}),"\n",(0,t.jsx)(n.h3,{id:"test-results",children:"Test Results"}),"\n",(0,t.jsx)(n.p,{children:"All component unit tests are currently passing, providing comprehensive coverage of UI functionality."}),"\n",(0,t.jsx)(n.h3,{id:"coverage-areas",children:"Coverage Areas"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BackButton:"})," 5 tests covering navigation functionality and error handling"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CloseButton:"})," 5 tests covering click handling and prop validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LikedVideoCard:"})," 9 tests covering video display, tag handling, and user interactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"VideoComponent:"})," 12 tests covering video playback and interaction functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Login Component:"})," 7 tests covering authentication forms and validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SignUp Component:"})," 7 tests covering registration forms and validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Onboarding Component:"})," 9 tests covering preference selection and flow"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ProtectedRoute Component:"})," 9 tests covering authentication routing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ProfileSidebar Component:"})," 8 tests covering profile navigation and display"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test Execution Time:"})," Approximately 20ms for all component tests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Coverage:"})," 100% component coverage with comprehensive scenario testing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reliability:"})," All tests pass consistently across different environments"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"best-practices-and-standards",children:"Best Practices and Standards"}),"\n",(0,t.jsx)(n.h3,{id:"test-organization",children:"Test Organization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tests are grouped by component for logical organization"}),"\n",(0,t.jsx)(n.li,{children:"Each test has a descriptive name that clearly indicates its purpose"}),"\n",(0,t.jsx)(n.li,{children:"Test scenarios cover both positive and negative cases"}),"\n",(0,t.jsx)(n.li,{children:"Edge cases and error conditions are thoroughly tested"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mocking-guidelines",children:"Mocking Guidelines"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"External dependencies are consistently mocked across all tests"}),"\n",(0,t.jsx)(n.li,{children:"Mock data reflects realistic application usage patterns"}),"\n",(0,t.jsx)(n.li,{children:"Error scenarios are simulated for comprehensive coverage"}),"\n",(0,t.jsx)(n.li,{children:"Test isolation is maintained to prevent interference"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"assertion-patterns",children:"Assertion Patterns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"User-facing functionality is tested for expected behavior"}),"\n",(0,t.jsx)(n.li,{children:"Component state changes and prop handling are verified"}),"\n",(0,t.jsx)(n.li,{children:"Error handling and recovery mechanisms are validated"}),"\n",(0,t.jsx)(n.li,{children:"Accessibility and usability are considered in test design"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-development-workflow",children:"Integration with Development Workflow"}),"\n",(0,t.jsx)(n.p,{children:"The component unit tests are integrated into the project's development workflow:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated Testing:"})," Tests run on every commit and pull request"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Coverage Reporting:"})," Detailed coverage reports are generated and tracked"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quality Gates:"})," Tests must pass before code can be merged to main branch"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Documentation:"})," Test results are documented and tracked for quality assurance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This comprehensive testing approach ensures the UI components maintain high quality and reliability as the codebase evolves and new features are added."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);