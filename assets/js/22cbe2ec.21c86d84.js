"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[397],{30429:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var r=n(74848),t=n(28453);const i={sidebar_position:1},l="Backend Unit Tests",c={id:"testing/backend-unit-testing",title:"Backend Unit Tests",description:"Unit Testing Library Explanation",source:"@site/docs/testing/backend-unit-testing.md",sourceDirName:"testing",slug:"/testing/backend-unit-testing",permalink:"/project-mentalhealthliteracyapp/docs/testing/backend-unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-mentalhealthliteracyapp/edit/main/documentation/docs/testing/backend-unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Lana Lerner",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Testing Documentation",permalink:"/project-mentalhealthliteracyapp/docs/category/testing-documentation"},next:{title:"Frontend Unit Tests",permalink:"/project-mentalhealthliteracyapp/docs/testing/frontend-unit-testing"}},d={},o=[{value:"Unit Testing Library Explanation",id:"unit-testing-library-explanation",level:2},{value:"API Unit Tests",id:"api-unit-tests",level:2},{value:"api/login",id:"apilogin",level:3},{value:"api/preferences",id:"apipreferences",level:3},{value:"api/recommendations",id:"apirecommendations",level:3},{value:"api/register",id:"apiregister",level:3},{value:"api/signout",id:"apisignout",level:3},{value:"Test Coverage Report",id:"test-coverage-report",level:3}];function a(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"backend-unit-tests",children:"Backend Unit Tests"}),"\n",(0,r.jsx)(s.h2,{id:"unit-testing-library-explanation",children:"Unit Testing Library Explanation"}),"\n",(0,r.jsxs)(s.p,{children:["For backend unit testing, we use ",(0,r.jsx)(s.strong,{children:"Vitest"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Vitest"})," is chosen for its speed, modern tooling, and seamless integration with Vite based projects. It supports Jest compatible syntax, making it easy to adopt and maintain. It also provides built-in coverage reporting and works well for our server logic."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Jest"})," is a mature, widely-used alternative with robust mocking and coverage features, suitable for projects not using Vite."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"These libraries are suitable for our project because they allow us to test backend logic efficiently, with strong support for mocking external dependencies"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Focus:"})," Test standalone backend logic functions (API handlers, data transformers, Supabase queries) to ensure correct outputs for given inputs."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Tools:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Vitest"}),": For testing server logic, API routes, and edge functions"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Mocking:"})," Use ",(0,r.jsx)(s.code,{children:"vi.mock()"})," or ",(0,r.jsx)(s.code,{children:"jest.mock()"})," to stub Supabase client and mock database results"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.p,{children:"For each method, one or more test cases."}),"\n",(0,r.jsx)(s.p,{children:"A test case consists of input parameter values and expected results."}),"\n",(0,r.jsx)(s.p,{children:"All external classes should be stubbed using mock objects."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"api-unit-tests",children:"API Unit Tests"}),"\n",(0,r.jsx)(s.h3,{id:"apilogin",children:"api/login"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Extract form data and call Redux with credentials","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," email = '",(0,r.jsx)(s.a,{href:"mailto:test@example.com",children:"test@example.com"}),"', password = 'password123'"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Form data extracted, Redux action dispatched, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle various form data scenarios","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Test cases including valid credentials, empty data, malformed email"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," All scenarios processed, Redux dispatch called, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle empty form data","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," FormData with no fields appended"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Form data extraction works, Redux still called, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Verify API function signature and return type","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"}),"  Valid form data"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Function exists, returns object with status (number) and message (string) properties"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Note: Tests return success response as validation and authentication logic are handled by FE and Redux layer. API focuses on form data extraction and Redux action dispatching"})}),"\n",(0,r.jsx)("img",{width:"1146",height:"367",alt:"Screenshot 2025-08-01 000354",src:"https://github.com/user-attachments/assets/a9f5bd4e-6186-4314-ada2-182fc0da40ac"}),"\n",(0,r.jsx)(s.h3,{id:"apipreferences",children:"api/preferences"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"saveUserPreferences"})," : Save user preferences successfully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user, preferences = ['Art', 'Introverted']"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Preferences saved to database, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"saveUserPreferences"})," : Return error when user is not authenticated","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Unauthenticated user, preferences = ['Art', 'Introverted']"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Authentication error returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"saveUserPreferences"})," : Return error when fetching preferences fails","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user, database error on preferences lookup"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Database error returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"saveUserPreferences"})," : Return error when no matching preferences found","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user, non-existent preference names"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"}),' "No matching preferences found" error returned']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"saveUserPreferences"})," : Return error when deleting existing preferences fails","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user, database error on delete operation"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"}),' "Error updating preferences" error returned']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"saveUserPreferences"})," : Return error when inserting new preferences fails","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user, database error on insert operation"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"}),' "Error saving preferences" error returned']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"fetchUserPreferences"})," : Fetch user preferences successfully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user with existing preferences"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Preferences separated into interests and traits, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"fetchUserPreferences"})," : Return error when user is not authenticated","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Unauthenticated user"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Authentication error returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"fetchUserPreferences"})," : Return error when fetching user preferences fails","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user, database error on preferences query"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"}),' "Error fetching preferences" error returned']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"fetchUserPreferences"})," : Return empty arrays when no preferences found","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user with no saved preferences"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Empty interests and traits arrays, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"fetchUserPreferences"})," : Separate interests and traits correctly","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user with mixed preference types"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Preferences correctly categorized by type, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"fetchUserPreferences"})," : Handle preferences with missing or invalid type","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user with invalid preference types"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Valid preferences processed, invalid ones ignored, success response returned"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("img",{width:"1572",height:"557",alt:"Screenshot 2025-08-01 004534",src:"https://github.com/user-attachments/assets/359d9414-9893-4239-bd97-a27bcb9075ea"}),"\n",(0,r.jsx)(s.h3,{id:"apirecommendations",children:"api/recommendations"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getUserPreferences"})," : Get user preferences successfully for authenticated user","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," User ID = '1'"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Array of preference IDs returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getUserPreferences"})," : Get localStorage preferences for non-authenticated user","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," User ID = 'localStorage_user', localStorage contains interests and traits"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Preference names converted to IDs, array returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getUserPreferences"})," : Return empty array when database error occurs","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," User ID = '1', database error"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Empty array returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getCategoryPreferences"})," : Get category preferences successfully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Preference IDs = [1, 2, 3]"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Array of category IDs returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getCategoryPreferences"})," : Return empty array when no preference IDs provided","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Empty preference IDs array"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Empty array returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getVideosFromCategories"})," : Get videos from categories successfully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Category IDs = [1, 2]"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Array of video objects ordered by likes returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getVideosFromCategories"})," : Return empty array when no video categories found","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Category IDs with no matching videos"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Empty array returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getCurrentUserId"})," : Return authenticated user ID when user is logged in","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user session"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," User ID returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getCurrentUserId"})," : Return localStorage_user when no authenticated user but has localStorage preferences","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," No authenticated user, localStorage contains preferences"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," 'localStorage_user' returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getAllVideos"})," : Get all videos successfully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," No specific parameters"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Array of all videos ordered by likes returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getAllVideos"})," : Return empty array when database error occurs","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Database error on videos query"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Empty array returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getRecommendedVideos"})," : Get recommended videos successfully for authenticated user","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user with preferences"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Combined array of recommended videos and remaining videos returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," ",(0,r.jsx)(s.em,{children:"getRecommendedVideos"})," : Fallback to all videos when no user preferences found","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Authenticated user with no preferences"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Array of all videos returned"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("img",{width:"1814",height:"611",alt:"Screenshot 2025-08-01 012904",src:"https://github.com/user-attachments/assets/f03d8975-830d-49b5-ab7a-20acf7de1d82"}),"\n",(0,r.jsx)(s.h3,{id:"apiregister",children:"api/register"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Extract form data and call Redux with registration credentials","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," email = '",(0,r.jsx)(s.a,{href:"mailto:newuser@example.com",children:"newuser@example.com"}),"', password = 'newpassword123'"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Form data extracted, user_register action dispatched, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle various registration form data scenarios","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Test cases including valid credentials, empty data, special email characters"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," All scenarios processed, Redux dispatch called, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle empty form data gracefully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," FormData with no fields appended"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Form data extraction completed, Redux action dispatched with empty strings, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle missing email field gracefully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," FormData with only password field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Form data extracted, Redux dispatch called with undefined email, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle missing password field gracefully","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," FormData with only email field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Form data extracted successfully, Redux dispatch called with undefined password, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Verify API function signature and return type consistency","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Valid form data"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Function exists and returns properly structured response object with status and message properties"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Note: Tests return success response as validation and authentication logic are handled by FE and Redux layer. API focuses on form data extraction and Redux action dispatching"})}),"\n",(0,r.jsx)("img",{width:"1351",height:"405",alt:"Screenshot 2025-08-01 015239",src:"https://github.com/user-attachments/assets/fbf6d3bc-91bc-4616-9f93-9cb6bef9e6bf"}),"\n",(0,r.jsx)(s.h3,{id:"apisignout",children:"api/signout"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Successful signout with no errors","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," useUserError returns null"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," reset_error and user_signout actions dispatched, success response returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Signout with error returns error response","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"}),' useUserError returns "Signout failed"']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Both actions dispatched, error response with error message returned"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Verify order of actions","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," No error scenario"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," reset_error called first, then user_signout called second"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Handle various error message types","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," Multiple error scenarios (strings, null, undefined, empty string)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Proper status codes and appropriate messages"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Test:"})," Verify API function signature and return type","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," No error scenario"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Expected Result:"})," Function exists, returns object with status and message properties"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("img",{width:"1095",height:"378",alt:"Screenshot 2025-08-01 022039",src:"https://github.com/user-attachments/assets/2cfc531e-748b-4001-98a8-f614652f6b1d"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"test-coverage-report",children:"Test Coverage Report"}),"\n",(0,r.jsxs)(s.p,{children:["Vitest (or Jest) can generate an HTML coverage report. To make this available in Docusaurus, export the report and place it in the ",(0,r.jsx)(s.code,{children:"static"})," folder. For automation, set up a CI pipeline to run tests, generate the report, and move it to ",(0,r.jsx)(s.code,{children:"static"})," on each update."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var r=n(96540);const t={},i=r.createContext(t);function l(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);